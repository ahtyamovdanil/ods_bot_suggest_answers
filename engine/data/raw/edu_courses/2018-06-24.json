[
    {
        "client_msg_id": "e059b055-5197-4b60-8803-683c677a95fd",
        "type": "message",
        "text": "<http:\/\/www.the-paper-trail.org\/post\/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer\/>",
        "user": "U1CEWC3BJ",
        "ts": "1529905555.000182",
        "team": "T040HKJE3",
        "user_team": "T040HKJE3",
        "source_team": "T040HKJE3",
        "user_profile": {
            "avatar_hash": "cbca8e74ab90",
            "image_72": "https:\/\/avatars.slack-edge.com\/2019-10-30\/816866444006_cbca8e74ab9003465747_72.jpg",
            "first_name": "Danila",
            "real_name": "Danila Matveev",
            "display_name": "optik",
            "team": "T040HKJE3",
            "name": "optik",
            "is_restricted": false,
            "is_ultra_restricted": false
        },
        "attachments": [
            {
                "service_name": "The Paper Trail",
                "title": "Distributed systems theory for the distributed systems engineer",
                "title_link": "http:\/\/www.the-paper-trail.org\/post\/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer\/",
                "text": "Updated June 2018 with content on atomic broadcast, gossip, chain replication and more Gwen Shapira, who at the time was an engineer at Cloudera and now is spreading the Kafka gospel, asked a question on Twitter that got me thinking. I need to improve my proficiency in distributed systems theory. Where do I start? Any recommended books?— Gwen (Chen) Shapira (@gwenshap) August 7, 2014 My response of old might have been “well, here’s the FLP paper, and here’s the Paxos paper, and here’s the Byzantine generals paper…”, and I’d have prescribed a laundry list of primary source material which would have taken at least six months to get through if you rushed. But I’ve come to thinking that recommending a ton of theoretical papers is often precisely the wrong way to go about learning distributed systems theory (unless you are in a PhD program). Papers are usually deep, usually complex, and require both serious study, and usually significant experience to glean their important contributions and to place them in context. What good is requiring that level of expertise of engineers? And yet, unfortunately, there’s a paucity of good ‘bridge’ material that summarises, distills and contextualises the important results and ideas in distributed systems theory; particularly material that does so without condescending. Considering that gap lead me to another interesting question: What distributed systems theory should a distributed systems engineer know? A little theory is, in this case, not such a dangerous thing. So I tried to come up with a list of what I consider the basic concepts that are applicable to my every-day job as a distributed systems engineer. Let me know what you think I missed!",
                "fallback": "The Paper Trail: Distributed systems theory for the distributed systems engineer",
                "from_url": "http:\/\/www.the-paper-trail.org\/post\/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer\/",
                "id": 1,
                "original_url": "http:\/\/www.the-paper-trail.org\/post\/2014-08-09-distributed-systems-theory-for-the-distributed-systems-engineer\/"
            }
        ],
        "thread_ts": "1529611798.000069",
        "parent_user_id": "U14CTBLFJ",
        "reactions": [
            {
                "name": "tnx",
                "users": [
                    "U14CTBLFJ",
                    "U2AML8LEB"
                ],
                "count": 2
            }
        ]
    }
]